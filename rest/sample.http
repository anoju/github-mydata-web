# ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
# rest-client 사용예제 
# ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
# +++++++++++++++ 출처(vscode extension) +++++++++++++++
# => REST Client (humao.rest-client)
# 
# 
# 
# +++++++++++++++ 참고 +++++++++++++++
# '#' or '//' => 한줄주석
# '###'       => 각 요청별 구분자
#
#
# 
# +++++++++++++++ 환경변수설정/사용 +++++++++++++++
# => 설정
# @var1 = 변수명1
# @var2 = 변수명2
# @var3 = 변수명3
#
# => 사용
# GET {{var1}}/rest/get
# 
# 
# 
# 

# +++++++++++++++ 기본사용 룰 +++++++++++++++
# 
# METHOD 호출URL
# 헤더가 필요한경우 헤더설정
# 
# payload(multipart, json/xml body, or post parameter) 가 필요한경우 한줄 개행후 추가
#
# 
# 
# 
# +++++++++++++++ 예시 +++++++++++++++
# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ 환경변수 설정
@serverHost = http://localhost:8080
@customHeader = I'm custom header!





# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ header 제어
### 헤더설정하기
GET {{serverHost}}/rest/get
Content-Type: text/plain
Authorization: customAuth
custom-header: {{customHeader}}




# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ GET 요청
### no parameter
GET {{serverHost}}/rest/get

### with parameter(querystring)
GET {{serverHost}}/rest/get?page=1&size=2&agent=test
Content-Type: text/plain
Authorization: customAuth
custom-header: {{customHeader}}





# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ POST 요청
### no parameter
POST {{serverHost}}/rest/post

### with post parameter
POST {{serverHost}}/rest/post
Content-Type: application/x-www-form-urlencoded

page=1
&size=2
&agent=test



# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ PUT 요청
### no parameter
PUT {{serverHost}}/rest/put




# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ requestBody(payload) 요청
### with requestBody - body 직접 생성하여 전달
PUT {{serverHost}}/rest/requestBody
Content-Type: application/json

{
    "page": "1",
    "size": "2",
    "agent": "test"
}


### with requestBody - body 외부파일로 전달
PUT {{serverHost}}/rest/requestBody HTTP/1.1
Content-Type: application/json

< ./sample.json



# ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ multipart 요청
### 파일의경우 자동으로 byte 데이터로 변환함
POST {{serverHost}}/rest/multipart
Content-Type: multipart/form-data; boundary=----CUSTOM_BOUNDARY

------CUSTOM_BOUNDARY
Content-Disposition: form-data; name="filedata1"; filename="sample.json"
Content-Type: application/json

< ./sample.json
------CUSTOM_BOUNDARY
Content-Disposition: form-data; name="filedata2"; filename="sample.xml"
Content-Type: application/octet-stream

< ./sample.xml
------CUSTOM_BOUNDARY
Content-Disposition: form-data; name="textdata";
Content-Type: text/plain

text value data
------CUSTOM_BOUNDARY--
